/**
 * Automatically generated by Zserio C++ extension version 2.9.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef GTFSREALTIME_INCREMENTALITY_H
#define GTFSREALTIME_INCREMENTALITY_H

#include <array>

#include <zserio/Enums.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/PackingContext.h>
#include <zserio/ArrayTraits.h>
#include <zserio/Types.h>

namespace gtfsrealtime
{

enum class Incrementality : uint8_t
{
    FULL_DATASET = UINT8_C(0),
    DIFFERENTIAL = UINT8_C(1)
};

} // namespace gtfsrealtime

namespace zserio
{

// This is full specialization of enumeration traits and methods for Incrementality enumeration.
template <>
struct EnumTraits<::gtfsrealtime::Incrementality>
{
    static constexpr ::std::array<const char*, 2> names =
    {{
        "FULL_DATASET",
        "DIFFERENTIAL"
    }};

    static constexpr ::std::array<::gtfsrealtime::Incrementality, 2> values =
    {{
        ::gtfsrealtime::Incrementality::FULL_DATASET,
        ::gtfsrealtime::Incrementality::DIFFERENTIAL
    }};
};

template <>
size_t enumToOrdinal<::gtfsrealtime::Incrementality>(::gtfsrealtime::Incrementality value);

template <>
::gtfsrealtime::Incrementality valueToEnum<::gtfsrealtime::Incrementality>(
        typename ::std::underlying_type<::gtfsrealtime::Incrementality>::type rawValue);

template <>
uint32_t enumHashCode<::gtfsrealtime::Incrementality>(::gtfsrealtime::Incrementality value);

template <>
void initPackingContext<::zserio::PackingContextNode, ::gtfsrealtime::Incrementality>(
        ::zserio::PackingContextNode& contextNode, ::gtfsrealtime::Incrementality value);

template <>
size_t bitSizeOf<::gtfsrealtime::Incrementality>(::gtfsrealtime::Incrementality value);

template <>
size_t bitSizeOf<::zserio::PackingContextNode, ::gtfsrealtime::Incrementality>(
        ::zserio::PackingContextNode& contextNode, ::gtfsrealtime::Incrementality value);

template <>
size_t initializeOffsets<::gtfsrealtime::Incrementality>(size_t bitPosition, ::gtfsrealtime::Incrementality value);

template <>
size_t initializeOffsets<::zserio::PackingContextNode, ::gtfsrealtime::Incrementality>(
        ::zserio::PackingContextNode& contextNode, size_t bitPosition, ::gtfsrealtime::Incrementality value);

template <>
::gtfsrealtime::Incrementality read<::gtfsrealtime::Incrementality>(::zserio::BitStreamReader& in);

template <>
::gtfsrealtime::Incrementality read<::gtfsrealtime::Incrementality, ::zserio::PackingContextNode>(
        ::zserio::PackingContextNode& contextNode, ::zserio::BitStreamReader& in);

template <>
void write<::gtfsrealtime::Incrementality>(::zserio::BitStreamWriter& out, ::gtfsrealtime::Incrementality value);

template <>
void write<::zserio::PackingContextNode, ::gtfsrealtime::Incrementality>(
        ::zserio::PackingContextNode& contextNode, ::zserio::BitStreamWriter& out, ::gtfsrealtime::Incrementality value);

} // namespace zserio

#endif // GTFSREALTIME_INCREMENTALITY_H
