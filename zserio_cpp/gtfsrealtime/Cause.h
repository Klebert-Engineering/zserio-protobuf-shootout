/**
 * Automatically generated by Zserio C++ extension version 2.9.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef GTFSREALTIME_CAUSE_H
#define GTFSREALTIME_CAUSE_H

#include <array>

#include <zserio/Enums.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/BitSizeOfCalculator.h>
#include <zserio/PackingContext.h>
#include <zserio/ArrayTraits.h>
#include <zserio/Types.h>

namespace gtfsrealtime
{

enum class Cause : uint16_t
{
    UNKNOWN_CAUSE = UINT16_C(1),
    OTHER_CAUSE = UINT16_C(2),
    TECHNICAL_PROBLEM = UINT16_C(3),
    STRIKE = UINT16_C(4),
    DEMONSTRATION = UINT16_C(5),
    ACCIDENT = UINT16_C(6),
    HOLIDAY = UINT16_C(7),
    WEATHER = UINT16_C(8),
    MAINTENANCE = UINT16_C(9),
    CONSTRUCTION = UINT16_C(10),
    POLICE_ACTIVITY = UINT16_C(11),
    MEDICAL_EMERGENCY = UINT16_C(12)
};

} // namespace gtfsrealtime

namespace zserio
{

// This is full specialization of enumeration traits and methods for Cause enumeration.
template <>
struct EnumTraits<::gtfsrealtime::Cause>
{
    static constexpr ::std::array<const char*, 12> names =
    {{
        "UNKNOWN_CAUSE",
        "OTHER_CAUSE",
        "TECHNICAL_PROBLEM",
        "STRIKE",
        "DEMONSTRATION",
        "ACCIDENT",
        "HOLIDAY",
        "WEATHER",
        "MAINTENANCE",
        "CONSTRUCTION",
        "POLICE_ACTIVITY",
        "MEDICAL_EMERGENCY"
    }};

    static constexpr ::std::array<::gtfsrealtime::Cause, 12> values =
    {{
        ::gtfsrealtime::Cause::UNKNOWN_CAUSE,
        ::gtfsrealtime::Cause::OTHER_CAUSE,
        ::gtfsrealtime::Cause::TECHNICAL_PROBLEM,
        ::gtfsrealtime::Cause::STRIKE,
        ::gtfsrealtime::Cause::DEMONSTRATION,
        ::gtfsrealtime::Cause::ACCIDENT,
        ::gtfsrealtime::Cause::HOLIDAY,
        ::gtfsrealtime::Cause::WEATHER,
        ::gtfsrealtime::Cause::MAINTENANCE,
        ::gtfsrealtime::Cause::CONSTRUCTION,
        ::gtfsrealtime::Cause::POLICE_ACTIVITY,
        ::gtfsrealtime::Cause::MEDICAL_EMERGENCY
    }};
};

template <>
size_t enumToOrdinal<::gtfsrealtime::Cause>(::gtfsrealtime::Cause value);

template <>
::gtfsrealtime::Cause valueToEnum<::gtfsrealtime::Cause>(
        typename ::std::underlying_type<::gtfsrealtime::Cause>::type rawValue);

template <>
uint32_t enumHashCode<::gtfsrealtime::Cause>(::gtfsrealtime::Cause value);

template <>
void initPackingContext<::zserio::PackingContextNode, ::gtfsrealtime::Cause>(
        ::zserio::PackingContextNode& contextNode, ::gtfsrealtime::Cause value);

template <>
size_t bitSizeOf<::gtfsrealtime::Cause>(::gtfsrealtime::Cause value);

template <>
size_t bitSizeOf<::zserio::PackingContextNode, ::gtfsrealtime::Cause>(
        ::zserio::PackingContextNode& contextNode, ::gtfsrealtime::Cause value);

template <>
size_t initializeOffsets<::gtfsrealtime::Cause>(size_t bitPosition, ::gtfsrealtime::Cause value);

template <>
size_t initializeOffsets<::zserio::PackingContextNode, ::gtfsrealtime::Cause>(
        ::zserio::PackingContextNode& contextNode, size_t bitPosition, ::gtfsrealtime::Cause value);

template <>
::gtfsrealtime::Cause read<::gtfsrealtime::Cause>(::zserio::BitStreamReader& in);

template <>
::gtfsrealtime::Cause read<::gtfsrealtime::Cause, ::zserio::PackingContextNode>(
        ::zserio::PackingContextNode& contextNode, ::zserio::BitStreamReader& in);

template <>
void write<::gtfsrealtime::Cause>(::zserio::BitStreamWriter& out, ::gtfsrealtime::Cause value);

template <>
void write<::zserio::PackingContextNode, ::gtfsrealtime::Cause>(
        ::zserio::PackingContextNode& contextNode, ::zserio::BitStreamWriter& out, ::gtfsrealtime::Cause value);

} // namespace zserio

#endif // GTFSREALTIME_CAUSE_H
