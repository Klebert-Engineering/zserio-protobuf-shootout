/**
 * Automatically generated by Zserio C++ extension version 2.9.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef GTFSREALTIME_EFFECT_H
#define GTFSREALTIME_EFFECT_H

#include <array>

#include <zserio/Enums.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/BitSizeOfCalculator.h>
#include <zserio/PackingContext.h>
#include <zserio/ArrayTraits.h>
#include <zserio/Types.h>

namespace gtfsrealtime
{

enum class Effect : uint16_t
{
    NO_SERVICE = UINT16_C(1),
    REDUCED_SERVICE = UINT16_C(2),
    SIGNIFICANT_DELAYS = UINT16_C(3),
    DETOUR = UINT16_C(4),
    ADDITIONAL_SERVICE = UINT16_C(5),
    MODIFIED_SERVICE = UINT16_C(6),
    OTHER_EFFECT = UINT16_C(7),
    UNKNOWN_EFFECT = UINT16_C(8),
    STOP_MOVED = UINT16_C(9)
};

} // namespace gtfsrealtime

namespace zserio
{

// This is full specialization of enumeration traits and methods for Effect enumeration.
template <>
struct EnumTraits<::gtfsrealtime::Effect>
{
    static constexpr ::std::array<const char*, 9> names =
    {{
        "NO_SERVICE",
        "REDUCED_SERVICE",
        "SIGNIFICANT_DELAYS",
        "DETOUR",
        "ADDITIONAL_SERVICE",
        "MODIFIED_SERVICE",
        "OTHER_EFFECT",
        "UNKNOWN_EFFECT",
        "STOP_MOVED"
    }};

    static constexpr ::std::array<::gtfsrealtime::Effect, 9> values =
    {{
        ::gtfsrealtime::Effect::NO_SERVICE,
        ::gtfsrealtime::Effect::REDUCED_SERVICE,
        ::gtfsrealtime::Effect::SIGNIFICANT_DELAYS,
        ::gtfsrealtime::Effect::DETOUR,
        ::gtfsrealtime::Effect::ADDITIONAL_SERVICE,
        ::gtfsrealtime::Effect::MODIFIED_SERVICE,
        ::gtfsrealtime::Effect::OTHER_EFFECT,
        ::gtfsrealtime::Effect::UNKNOWN_EFFECT,
        ::gtfsrealtime::Effect::STOP_MOVED
    }};
};

template <>
size_t enumToOrdinal<::gtfsrealtime::Effect>(::gtfsrealtime::Effect value);

template <>
::gtfsrealtime::Effect valueToEnum<::gtfsrealtime::Effect>(
        typename ::std::underlying_type<::gtfsrealtime::Effect>::type rawValue);

template <>
uint32_t enumHashCode<::gtfsrealtime::Effect>(::gtfsrealtime::Effect value);

template <>
void initPackingContext<::zserio::PackingContextNode, ::gtfsrealtime::Effect>(
        ::zserio::PackingContextNode& contextNode, ::gtfsrealtime::Effect value);

template <>
size_t bitSizeOf<::gtfsrealtime::Effect>(::gtfsrealtime::Effect value);

template <>
size_t bitSizeOf<::zserio::PackingContextNode, ::gtfsrealtime::Effect>(
        ::zserio::PackingContextNode& contextNode, ::gtfsrealtime::Effect value);

template <>
size_t initializeOffsets<::gtfsrealtime::Effect>(size_t bitPosition, ::gtfsrealtime::Effect value);

template <>
size_t initializeOffsets<::zserio::PackingContextNode, ::gtfsrealtime::Effect>(
        ::zserio::PackingContextNode& contextNode, size_t bitPosition, ::gtfsrealtime::Effect value);

template <>
::gtfsrealtime::Effect read<::gtfsrealtime::Effect>(::zserio::BitStreamReader& in);

template <>
::gtfsrealtime::Effect read<::gtfsrealtime::Effect, ::zserio::PackingContextNode>(
        ::zserio::PackingContextNode& contextNode, ::zserio::BitStreamReader& in);

template <>
void write<::gtfsrealtime::Effect>(::zserio::BitStreamWriter& out, ::gtfsrealtime::Effect value);

template <>
void write<::zserio::PackingContextNode, ::gtfsrealtime::Effect>(
        ::zserio::PackingContextNode& contextNode, ::zserio::BitStreamWriter& out, ::gtfsrealtime::Effect value);

} // namespace zserio

#endif // GTFSREALTIME_EFFECT_H
