/**
 * Automatically generated by Zserio C++ extension version 2.9.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode, sourcesAmalgamation, stdAllocator.
 */

#ifndef GTFSREALTIME_VEHICLE_STOP_STATUS_H
#define GTFSREALTIME_VEHICLE_STOP_STATUS_H

#include <array>

#include <zserio/Enums.h>
#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/PackingContext.h>
#include <zserio/ArrayTraits.h>
#include <zserio/Types.h>

namespace gtfsrealtime
{

enum class VehicleStopStatus : uint8_t
{
    INCOMING_AT = UINT8_C(0),
    STOPPED_AT = UINT8_C(1),
    IN_TRANSIT_TO = UINT8_C(2)
};

} // namespace gtfsrealtime

namespace zserio
{

// This is full specialization of enumeration traits and methods for VehicleStopStatus enumeration.
template <>
struct EnumTraits<::gtfsrealtime::VehicleStopStatus>
{
    static constexpr ::std::array<const char*, 3> names =
    {{
        "INCOMING_AT",
        "STOPPED_AT",
        "IN_TRANSIT_TO"
    }};

    static constexpr ::std::array<::gtfsrealtime::VehicleStopStatus, 3> values =
    {{
        ::gtfsrealtime::VehicleStopStatus::INCOMING_AT,
        ::gtfsrealtime::VehicleStopStatus::STOPPED_AT,
        ::gtfsrealtime::VehicleStopStatus::IN_TRANSIT_TO
    }};
};

template <>
size_t enumToOrdinal<::gtfsrealtime::VehicleStopStatus>(::gtfsrealtime::VehicleStopStatus value);

template <>
::gtfsrealtime::VehicleStopStatus valueToEnum<::gtfsrealtime::VehicleStopStatus>(
        typename ::std::underlying_type<::gtfsrealtime::VehicleStopStatus>::type rawValue);

template <>
uint32_t enumHashCode<::gtfsrealtime::VehicleStopStatus>(::gtfsrealtime::VehicleStopStatus value);

template <>
void initPackingContext<::zserio::PackingContextNode, ::gtfsrealtime::VehicleStopStatus>(
        ::zserio::PackingContextNode& contextNode, ::gtfsrealtime::VehicleStopStatus value);

template <>
size_t bitSizeOf<::gtfsrealtime::VehicleStopStatus>(::gtfsrealtime::VehicleStopStatus value);

template <>
size_t bitSizeOf<::zserio::PackingContextNode, ::gtfsrealtime::VehicleStopStatus>(
        ::zserio::PackingContextNode& contextNode, ::gtfsrealtime::VehicleStopStatus value);

template <>
size_t initializeOffsets<::gtfsrealtime::VehicleStopStatus>(size_t bitPosition, ::gtfsrealtime::VehicleStopStatus value);

template <>
size_t initializeOffsets<::zserio::PackingContextNode, ::gtfsrealtime::VehicleStopStatus>(
        ::zserio::PackingContextNode& contextNode, size_t bitPosition, ::gtfsrealtime::VehicleStopStatus value);

template <>
::gtfsrealtime::VehicleStopStatus read<::gtfsrealtime::VehicleStopStatus>(::zserio::BitStreamReader& in);

template <>
::gtfsrealtime::VehicleStopStatus read<::gtfsrealtime::VehicleStopStatus, ::zserio::PackingContextNode>(
        ::zserio::PackingContextNode& contextNode, ::zserio::BitStreamReader& in);

template <>
void write<::gtfsrealtime::VehicleStopStatus>(::zserio::BitStreamWriter& out, ::gtfsrealtime::VehicleStopStatus value);

template <>
void write<::zserio::PackingContextNode, ::gtfsrealtime::VehicleStopStatus>(
        ::zserio::PackingContextNode& contextNode, ::zserio::BitStreamWriter& out, ::gtfsrealtime::VehicleStopStatus value);

} // namespace zserio

#endif // GTFSREALTIME_VEHICLE_STOP_STATUS_H
